{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","onClick","id","className","title","content","CreateArea","onChange","name","placeholder","rows","App","React","useState","newNote","setNewNote","notes","setNotes","deleteNote","previousNotes","filter","_","idx","event","target","value","previousNote","prevNotes","preventDefault","map","note","ReactDOM","render","document","getElementById"],"mappings":"iMAUeA,MARf,WACE,OACE,iCACE,2CCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,iCACE,kDAAgBF,QCMPG,MAVf,SAAcC,GACZ,OACE,sBAAKC,QAAS,kBAAID,EAAMC,QAAQD,EAAME,KAAKC,UAAU,OAArD,UACE,6BAAKH,EAAMI,QACX,4BAAIJ,EAAMK,UACV,gDCOSC,MAZf,SAAoBN,GAClB,OACE,8BACE,iCACE,uBAAOO,SAAUP,EAAMO,SAAUC,KAAK,QAAQC,YAAY,UAC1D,0BAAUF,SAAUP,EAAMO,SAAUC,KAAK,UAAUC,YAAY,iBAAiBC,KAAK,MACrF,wBAAQT,QAASD,EAAMC,QAAvB,qBCwCOU,MA1Cf,WAAgB,IAAD,EACiBC,IAAMC,SAAS,CAC3CT,MAAO,GACPC,QAAS,KAHE,mBACNS,EADM,KACGC,EADH,OAKaH,IAAMC,SAAS,IAL5B,mBAKNG,EALM,KAKCC,EALD,KAsBb,SAASC,EAAWhB,GAClBe,GAAS,SAAAE,GACP,OAAOA,EAAcC,QAAO,SAACC,EAAEC,GAAH,OAASA,IAAMpB,QAG/C,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYK,SAvBhB,SAAkBgB,GAAO,IAAD,EACAA,EAAMC,OAArBhB,EADe,EACfA,KAAMiB,EADS,EACTA,MACbV,GAAW,SAAAW,GACT,kCACKA,GADL,kBAEGlB,EAAMiB,QAkBuBxB,QAdpC,SAAiBsB,GACfN,GAAS,SAAAU,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAqBb,OAEvBS,EAAMK,oBAWHZ,EAAMa,KAAI,SAACC,EAAMR,GAAP,OAAa,cAAC,EAAD,CACtBlB,MAAO0B,EAAK1B,MACZC,QAASyB,EAAKzB,QACdH,GAAIoB,EACJrB,QAASiB,OAEX,cAAC,EAAD,QCvCNa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cbafb2e8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n  return (\n    <div onClick={()=>props.onClick(props.id)} className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React from \"react\";\n\nfunction CreateArea(props) {\n  return (\n    <div>\n      <form>\n        <input onChange={props.onChange} name=\"title\" placeholder=\"Title\" />\n        <textarea onChange={props.onChange} name=\"content\" placeholder=\"Take a note...\" rows=\"3\" />\n        <button onClick={props.onClick}>+</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [newNote, setNewNote] = React.useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [notes, setNotes] = React.useState([]);\n\n  function nextNote(event){\n    const {name, value} = event.target;\n    setNewNote(previousNote=>{\n      return{\n        ...previousNote,\n        [name]:value\n      };\n    });\n  }\n  function addNote(event){\n    setNotes(prevNotes =>{\n      return [...prevNotes,newNote];\n    });\n    event.preventDefault();\n  }\n  function deleteNote(id){\n    setNotes(previousNotes=>{\n      return(previousNotes.filter((_,idx)=>idx!==id));\n    })\n  }\n  return (\n    <div>\n      <Header />\n      <CreateArea onChange={nextNote} onClick={addNote} />\n      {notes.map((note, idx)=><Note \n        title={note.title}\n        content={note.content} \n        id={idx} \n        onClick={deleteNote} \n        />)}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}